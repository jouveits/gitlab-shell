#!/bin/sh

result=0
TIMEPOINT=$(date +"%Y%m%d %H:%m:%S")
LOG_FILE="/home/git/gitlab/log/mantis_integration.log"
MANTIS_URL="http://mantis-si.jouve.local"
MANTIS_GIT_ENDPOINT="checkin_git_post.php"
CURL="/usr/bin/curl"

GIT_DIR=$(pwd)

while read oldrev newrev refname
do
  # Make sure we handle the situation when the branch does not exist yet
  if ! [ $oldrev = 0000000000000000000000000000000000000000 ]; then
    excludes=(^$oldrev)
  else
    excludes=( $(git for-each-ref --format '^%(refname:short)' refs/heads/) )
  fi

  # Get the list of incomming commits
  commits=`git rev-list $newrev "${excludes[@]}"`

  # For every commit in the list
  for commit in $commits
  do
    # check the log message for committer and message
    message=`git log --format=%s -1 $commit`
    committer=`git log --format=%cn -1 $commit`

    #Calling mantis
    $($CURL --silent --data-urlencode "commit=$commit" --data-urlencode "message=$message" --data-urlencode "committer=$committer" --data-urlencode "dir=$GIT_DIR" $MANTIS_URL/$MANTIS_GIT_ENDPOINT)

    #Log management
    echo "$TIMEPOINT ----------------------------------" >>$LOG_FILE
    echo "Commit : $commit" >>$LOG_FILE
    echo "Committer : $committer" >>$LOG_FILE
    echo "refname : $refname" >>$LOG_FILE
    echo "Message : $message" >>$LOG_FILE
    echo "Dir : $GIT_DIR" >>$LOG_FILE
  done
done

exit $result
