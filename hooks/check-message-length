#!/bin/sh

result=0

while read oldrev newrev refname
do
  # Make sure we handle the situation when the branch does not exist yet
  if ! [ $oldrev = 0000000000000000000000000000000000000000 ]; then
    excludes=(^$oldrev)
  else
    excludes=( $(git for-each-ref --format '^%(refname:short)' refs/heads/) )
  fi

  # Get the list of incomming commits
  commits=`git rev-list $newrev "${excludes[@]}"`

  # For every commit in the list
  for commit in $commits
  do
    # check the log message for ticket number
    message=`git log --format=%s -1 $commit`
    count=`echo "$message" | awk '{ print length }'`
    if [ $count -lt 10 ]
    then
      echo "Commit message $commit must have at least 10 charaters"
      result=1
    fi
  done
done

if [ result = 1 ]; then
  echo ""
  echo "To edit commit messages, follow this instructions:"
  echo "  git rebase -i `COMMIT_TO_EDIT`~1"
  echo "type 'i' to enter in insertion mode"
  echo "edit the first line by replacing 'pick' by 'reword'"
  echo "press escape and then type ':wq' and press enter"
  echo "edit message when console asking"
  echo ""
fi

exit $result
